# Input
```{contents} Table of Contents
:depth: 3
```
## Methods:
### GetKey
`Image.GetKey(key)`

Returns true if the specified key is currently held down.
```lua
OnUpdate = function(self)
	if Input.GetKey("up") then
		self.rigidbody:SetVelocity(0, -1)
	end
end
```
### GetKeyDown
`Image.GetKeyDown(key)`

Returns true if the specified key was pressed during this frame.
```lua
OnUpdate = function(self)
	if Input.GetKeyDown("space") then
		self:Jump() -- shouldn't call every frame space is held
	end
end
```
### GetKeyUp
`Input.GetKeyUp(key)`

Returns true if the specified key was released during this frame
```lua
OnUpdate = function(self)
	if Input.GetKeyDown("j") then
		self.attack_charging = true
	end
	if Input.GetKeyUp("j") then -- user stops holding button
		self.attack_charging = false
		self:Attack()
	end
	self:UpdateAttackCharge() -- checks if attack_charging
end
```
## Keys
### Directional (Arrow) Keys

| code      | key         |
| --------- | ----------- |
| `"up"`    | up arrow    |
| `"down"`  | down arrow  |
| `"right"` | right arrow |
| `"left"`  | left arrow  |
### Character Keys
|       |       |       |
| ----- | ----- | ----- |
| `"a"` | `"b"` | `"c"` |
| `"d"` | `"e"` | `"f"` |
| `"g"` | `"h"` | `"i"` |
| `"j"` | `"k"` | `"l"` |
| `"m"` | `"n"` | `"o"` |
| `"p"` | `"q"` | `"r"` |
| `"s"` | `"t"` | `"u"` |
| `"v"` | `"w"` | `"x"` |
| `"y"` | `"z"` | `"0"` |
| `"1"` | `"2"` | `"3"` |
| `"4"` | `"5"` | `"6"` |
| `"7"` | `"8"` | `"9"` |
### Misc Keys
| code       | key       |
| ---------- | --------- |
| `"escape"` | esc       |
| `"space"`  | space bar |
### Symbol Keys
| code   | key                       |
| ------ | ------------------------- |
| `"/"`  | forward slash             |
| `";"`  | semicolon                 |
| `"="`  | equals                    |
| `"-"`  | hyphen                    |
| `"."`  | period                    |
| `","`  | comma                     |
| `"["`  | opening bracket           |
| `"]"`  | closing bracket           |
| `"\\"` | back slash                |
| `"'"`  | apostrophe / single quote |
### Editing Keys
| code          | key                                  |
| ------------- | ------------------------------------ |
| `"lshift"`    | left shift                           |
| `"rshift"`    | right shift                          |
| `"lctrl"`     | left control                         |
| `"rctrl"`     | right control                        |
| `"lalt"`      | left alt                             |
| `"ralt"`      | right alt                            |
| `"tab"`       | tab key                              |
| `"return"`    | carriage return (new line key)       |
| `"enter"`     | enter key (submit key)               |
| `"backspace"` | backspace key (also delete on MacOS) |
| `"delete"`    | delete key                           |
| `"insert"`    | insert key                           |
